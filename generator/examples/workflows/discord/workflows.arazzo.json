{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "examples/openapi_specs/discord.openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "guild-onboarding-management",
      "summary": "This workflow allows guild administrators to configure and manage the onboarding experience for new members, ensuring a smooth and guided introduction to the server.",
      "description": "This workflow allows guild administrators to configure and manage the onboarding experience for new members, ensuring a smooth and guided introduction to the server.",
      "inputs": {
        "type": "object",
        "properties": {
          "guild_id": {
            "type": "string"
          },
          "prompts": {
            "type": "string"
          },
          "enabled": {
            "type": "string"
          },
          "default_channel_ids": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-guild-onboarding",
          "description": "Retrieves the current onboarding configuration for a guild.",
          "operationId": "get_guilds_onboarding",
          "parameters": [
            {
              "name": "guild_id",
              "in": "path",
              "value": "$inputs.guild_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "guild_id": "$response.body#/guild_id",
            "prompts": "$response.body#/prompts",
            "default_channel_ids": "$response.body#/default_channel_ids",
            "enabled": "$response.body#/enabled"
          }
        },
        {
          "stepId": "update-guild-onboarding",
          "description": "Updates the onboarding configuration for a guild, such as prompts and default channels.",
          "operationId": "put_guilds_onboarding",
          "parameters": [
            {
              "name": "guild_id",
              "in": "path",
              "value": "$inputs.guild_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "prompts": "$inputs.prompts",
              "enabled": "$inputs.enabled",
              "default_channel_ids": "$inputs.default_channel_ids",
              "mode": "$inputs.mode"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "guild_id": "$response.body#/guild_id",
            "prompts": "$response.body#/prompts",
            "default_channel_ids": "$response.body#/default_channel_ids",
            "enabled": "$response.body#/enabled"
          }
        }
      ],
      "outputs": {
        "guild_id": "$steps.update-guild-onboarding.outputs.guild_id",
        "prompts": "$steps.update-guild-onboarding.outputs.prompts",
        "default_channel_ids": "$steps.update-guild-onboarding.outputs.default_channel_ids",
        "enabled": "$steps.update-guild-onboarding.outputs.enabled"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "guild-template-management",
      "summary": "This workflow enables guild administrators to create, update, and synchronize guild templates for easy server setup and replication.",
      "description": "This workflow enables guild administrators to create, update, and synchronize guild templates for easy server setup and replication.",
      "inputs": {
        "type": "object",
        "properties": {
          "guild_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-guild-template",
          "description": "Creates a new guild template from an existing guild.",
          "operationId": "create_guild_template",
          "parameters": [
            {
              "name": "guild_id",
              "in": "path",
              "value": "$inputs.guild_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "code": "$response.body#/code",
            "name": "$response.body#/name",
            "description": "$response.body#/description",
            "usage_count": "$response.body#/usage_count",
            "creator_id": "$response.body#/creator_id",
            "created_at": "$response.body#/created_at",
            "updated_at": "$response.body#/updated_at",
            "source_guild_id": "$response.body#/source_guild_id",
            "serialized_source_guild": "$response.body#/serialized_source_guild"
          }
        },
        {
          "stepId": "get-guild-template",
          "description": "Retrieves a guild template by its code.",
          "operationId": "get_guild_template",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "value": "$inputs.code"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "code": "$response.body#/code",
            "name": "$response.body#/name",
            "description": "$response.body#/description",
            "usage_count": "$response.body#/usage_count",
            "creator_id": "$response.body#/creator_id",
            "created_at": "$response.body#/created_at",
            "updated_at": "$response.body#/updated_at",
            "source_guild_id": "$response.body#/source_guild_id",
            "serialized_source_guild": "$response.body#/serialized_source_guild"
          }
        },
        {
          "stepId": "sync-guild-template",
          "description": "Syncs a guild template with the current state of the guild.",
          "operationId": "sync_guild_template",
          "parameters": [
            {
              "name": "guild_id",
              "in": "path",
              "value": "$inputs.guild_id"
            },
            {
              "name": "code",
              "in": "path",
              "value": "$inputs.code"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "code": "$response.body#/code",
            "name": "$response.body#/name",
            "description": "$response.body#/description",
            "usage_count": "$response.body#/usage_count",
            "creator_id": "$response.body#/creator_id",
            "created_at": "$response.body#/created_at",
            "updated_at": "$response.body#/updated_at",
            "source_guild_id": "$response.body#/source_guild_id",
            "serialized_source_guild": "$response.body#/serialized_source_guild"
          }
        }
      ],
      "outputs": {
        "code": "$steps.sync-guild-template.outputs.code",
        "name": "$steps.sync-guild-template.outputs.name",
        "description": "$steps.sync-guild-template.outputs.description",
        "usage_count": "$steps.sync-guild-template.outputs.usage_count",
        "creator_id": "$steps.sync-guild-template.outputs.creator_id",
        "created_at": "$steps.sync-guild-template.outputs.created_at",
        "updated_at": "$steps.sync-guild-template.outputs.updated_at",
        "source_guild_id": "$steps.sync-guild-template.outputs.source_guild_id",
        "serialized_source_guild": "$steps.sync-guild-template.outputs.serialized_source_guild"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "auto-moderation-rule-management",
      "summary": "This workflow allows guild administrators to create and manage auto-moderation rules to automatically moderate content within their server.",
      "description": "This workflow allows guild administrators to create and manage auto-moderation rules to automatically moderate content within their server.",
      "inputs": {
        "type": "object",
        "properties": {
          "guild_id": {
            "type": "string"
          },
          "create-auto-moderation-rule_body": {
            "type": "object"
          },
          "rule_id": {
            "type": "string"
          },
          "update-auto-moderation-rule_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-auto-moderation-rule",
          "description": "Creates a new auto-moderation rule for a guild.",
          "operationId": "create_auto_moderation_rule",
          "parameters": [
            {
              "name": "guild_id",
              "in": "path",
              "value": "$inputs.guild_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-auto-moderation-rule_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "guild_id": "$response.body#/guild_id",
            "creator_id": "$response.body#/creator_id",
            "name": "$response.body#/name",
            "event_type": "$response.body#/event_type",
            "actions": "$response.body#/actions",
            "trigger_type": "$response.body#/trigger_type",
            "trigger_metadata": "$response.body#/trigger_metadata"
          }
        },
        {
          "stepId": "get-auto-moderation-rule",
          "description": "Retrieves an auto-moderation rule by its ID.",
          "operationId": "get_auto_moderation_rule",
          "parameters": [
            {
              "name": "guild_id",
              "in": "path",
              "value": "$inputs.guild_id"
            },
            {
              "name": "rule_id",
              "in": "path",
              "value": "$inputs.rule_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "guild_id": "$response.body#/guild_id",
            "creator_id": "$response.body#/creator_id",
            "name": "$response.body#/name",
            "event_type": "$response.body#/event_type",
            "actions": "$response.body#/actions",
            "trigger_type": "$response.body#/trigger_type",
            "trigger_metadata": "$response.body#/trigger_metadata"
          }
        },
        {
          "stepId": "update-auto-moderation-rule",
          "description": "Updates an existing auto-moderation rule.",
          "operationId": "update_auto_moderation_rule",
          "parameters": [
            {
              "name": "guild_id",
              "in": "path",
              "value": "$inputs.guild_id"
            },
            {
              "name": "rule_id",
              "in": "path",
              "value": "$inputs.rule_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.update-auto-moderation-rule_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "guild_id": "$response.body#/guild_id",
            "creator_id": "$response.body#/creator_id",
            "name": "$response.body#/name",
            "event_type": "$response.body#/event_type",
            "actions": "$response.body#/actions",
            "trigger_type": "$response.body#/trigger_type",
            "trigger_metadata": "$response.body#/trigger_metadata"
          }
        }
      ],
      "outputs": {
        "id": "$steps.update-auto-moderation-rule.outputs.id",
        "guild_id": "$steps.update-auto-moderation-rule.outputs.guild_id",
        "creator_id": "$steps.update-auto-moderation-rule.outputs.creator_id",
        "name": "$steps.update-auto-moderation-rule.outputs.name",
        "event_type": "$steps.update-auto-moderation-rule.outputs.event_type",
        "actions": "$steps.update-auto-moderation-rule.outputs.actions",
        "trigger_type": "$steps.update-auto-moderation-rule.outputs.trigger_type",
        "trigger_metadata": "$steps.update-auto-moderation-rule.outputs.trigger_metadata"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "webhook-message-management",
      "summary": "This workflow allows applications to manage messages sent via webhooks, including retrieving, updating, and deleting them.",
      "description": "This workflow allows applications to manage messages sent via webhooks, including retrieving, updating, and deleting them.",
      "inputs": {
        "type": "object",
        "properties": {
          "webhook_id": {
            "type": "string"
          },
          "webhook_token": {
            "type": "string"
          },
          "message_id": {
            "type": "string"
          },
          "thread_id": {
            "type": "string"
          },
          "with_components": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "embeds": {
            "type": "string"
          },
          "allowed_mentions": {
            "type": "string"
          },
          "components": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-webhook-message",
          "description": "Retrieves a specific message sent by a webhook.",
          "operationId": "get_webhook_message",
          "parameters": [
            {
              "name": "webhook_id",
              "in": "path",
              "value": "$inputs.webhook_id"
            },
            {
              "name": "webhook_token",
              "in": "path",
              "value": "$inputs.webhook_token"
            },
            {
              "name": "message_id",
              "in": "path",
              "value": "$inputs.message_id"
            },
            {
              "name": "thread_id",
              "in": "query",
              "value": "$inputs.thread_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "type": "$response.body#/type",
            "content": "$response.body#/content",
            "mentions": "$response.body#/mentions",
            "mention_roles": "$response.body#/mention_roles",
            "attachments": "$response.body#/attachments",
            "embeds": "$response.body#/embeds",
            "timestamp": "$response.body#/timestamp",
            "edited_timestamp": "$response.body#/edited_timestamp",
            "flags": "$response.body#/flags",
            "components": "$response.body#/components",
            "id": "$response.body#/id",
            "channel_id": "$response.body#/channel_id",
            "author": "$response.body#/author",
            "pinned": "$response.body#/pinned",
            "mention_everyone": "$response.body#/mention_everyone",
            "tts": "$response.body#/tts"
          }
        },
        {
          "stepId": "update-webhook-message",
          "description": "Updates a message sent by a webhook.",
          "operationId": "update_webhook_message",
          "parameters": [
            {
              "name": "webhook_id",
              "in": "path",
              "value": "$inputs.webhook_id"
            },
            {
              "name": "webhook_token",
              "in": "path",
              "value": "$inputs.webhook_token"
            },
            {
              "name": "message_id",
              "in": "path",
              "value": "$inputs.message_id"
            },
            {
              "name": "thread_id",
              "in": "query",
              "value": "$inputs.thread_id"
            },
            {
              "name": "with_components",
              "in": "query",
              "value": "$inputs.with_components"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "content": "$inputs.content",
              "embeds": "$inputs.embeds",
              "allowed_mentions": "$inputs.allowed_mentions",
              "components": "$inputs.components"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "type": "$response.body#/type",
            "content": "$response.body#/content",
            "mentions": "$response.body#/mentions",
            "mention_roles": "$response.body#/mention_roles",
            "attachments": "$response.body#/attachments",
            "embeds": "$response.body#/embeds",
            "timestamp": "$response.body#/timestamp",
            "edited_timestamp": "$response.body#/edited_timestamp",
            "flags": "$response.body#/flags",
            "components": "$response.body#/components",
            "id": "$response.body#/id",
            "channel_id": "$response.body#/channel_id",
            "author": "$response.body#/author",
            "pinned": "$response.body#/pinned",
            "mention_everyone": "$response.body#/mention_everyone",
            "tts": "$response.body#/tts"
          }
        },
        {
          "stepId": "delete-webhook-message",
          "description": "Deletes a message sent by a webhook.",
          "operationId": "delete_webhook_message",
          "parameters": [
            {
              "name": "webhook_id",
              "in": "path",
              "value": "$inputs.webhook_id"
            },
            {
              "name": "webhook_token",
              "in": "path",
              "value": "$inputs.webhook_token"
            },
            {
              "name": "message_id",
              "in": "path",
              "value": "$inputs.message_id"
            },
            {
              "name": "thread_id",
              "in": "query",
              "value": "$inputs.thread_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "message_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "type": "$steps.update-webhook-message.outputs.type",
        "content": "$steps.update-webhook-message.outputs.content",
        "mentions": "$steps.update-webhook-message.outputs.mentions",
        "mention_roles": "$steps.update-webhook-message.outputs.mention_roles",
        "attachments": "$steps.update-webhook-message.outputs.attachments",
        "embeds": "$steps.update-webhook-message.outputs.embeds",
        "timestamp": "$steps.update-webhook-message.outputs.timestamp",
        "edited_timestamp": "$steps.update-webhook-message.outputs.edited_timestamp",
        "flags": "$steps.update-webhook-message.outputs.flags",
        "components": "$steps.update-webhook-message.outputs.components",
        "id": "$steps.update-webhook-message.outputs.id",
        "channel_id": "$steps.update-webhook-message.outputs.channel_id",
        "author": "$steps.update-webhook-message.outputs.author",
        "pinned": "$steps.update-webhook-message.outputs.pinned",
        "mention_everyone": "$steps.update-webhook-message.outputs.mention_everyone",
        "tts": "$steps.update-webhook-message.outputs.tts",
        "message_data": "$steps.delete-webhook-message.outputs.message_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-guild-from-template",
      "summary": "This workflow allows a user to create a new guild based on a template.",
      "description": "This workflow allows a user to create a new guild based on a template.",
      "inputs": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-guild-template",
          "description": "Retrieves a guild template by its code.",
          "operationId": "get_guild_template",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "value": "$inputs.code"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "code": "$response.body#/code",
            "name": "$response.body#/name",
            "description": "$response.body#/description",
            "usage_count": "$response.body#/usage_count",
            "creator_id": "$response.body#/creator_id",
            "created_at": "$response.body#/created_at",
            "updated_at": "$response.body#/updated_at",
            "source_guild_id": "$response.body#/source_guild_id",
            "serialized_source_guild": "$response.body#/serialized_source_guild"
          }
        },
        {
          "stepId": "create-guild-from-template",
          "description": "Creates a new guild based on a template.",
          "operationId": "create_guild_from_template",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "value": "$inputs.code"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "name": "$response.body#/name",
            "icon": "$response.body#/icon",
            "description": "$response.body#/description",
            "region": "$response.body#/region",
            "owner_id": "$response.body#/owner_id"
          }
        }
      ],
      "outputs": {
        "code": "$steps.get-guild-template.outputs.code",
        "name": "$steps.create-guild-from-template.outputs.name",
        "description": "$steps.create-guild-from-template.outputs.description",
        "usage_count": "$steps.get-guild-template.outputs.usage_count",
        "creator_id": "$steps.get-guild-template.outputs.creator_id",
        "created_at": "$steps.get-guild-template.outputs.created_at",
        "updated_at": "$steps.get-guild-template.outputs.updated_at",
        "source_guild_id": "$steps.get-guild-template.outputs.source_guild_id",
        "serialized_source_guild": "$steps.get-guild-template.outputs.serialized_source_guild",
        "id": "$steps.create-guild-from-template.outputs.id",
        "icon": "$steps.create-guild-from-template.outputs.icon",
        "region": "$steps.create-guild-from-template.outputs.region",
        "owner_id": "$steps.create-guild-from-template.outputs.owner_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}